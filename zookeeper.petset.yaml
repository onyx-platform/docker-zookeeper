## From kubernetes/contrib/pets/zookeeper/zookeeper.yaml
apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: zoo
spec:
  serviceName: "zookeeper"
  replicas: 3
  template:
    metadata:
      labels:
        app: onyx-twitter-sample
        component: zk
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "install",
                "image": "onyxplatform/zookeeper:latest",
                "imagePullPolicy": "Always",
                "command": ["/workdir/install.sh"],
                "volumeMounts": [
                    {
                        "name": "confdir",
                        "mountPath": "/opt/zookeeper/conf"
                    }
                ]
            },
            {
                "name": "bootstrap",
                "image": "onyxplatform/zookeeper:latest",
                "command": ["/workdir/peer-finder"],
                "args": ["-on-start=\"/workdir/on-start.sh\"", "-service=zookeeper"],
                "env": [
                  {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                   }
                ],
                "volumeMounts": [
                    {
                        "name": "datadir",
                        "mountPath": "/tmp/zookeeper"
                    },
                    {
                        "name": "confdir",
                        "mountPath": "/opt/zookeeper/conf"
                    }
                ]
            }
        ]'
    spec:
      containers:
      - name: zk
        image: onyxplatform/zookeeper:latest
        ports:
        - containerPort: 2888
          name: peer
        - containerPort: 3888
          name: leader-election
        command:
        - /opt/zookeeper/bin/zkServer.sh
        args:
        - start-foreground
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "/opt/zookeeper/bin/zkCli.sh ls /"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /tmp/zookeeper
        - name: confdir
          mountPath: /opt/zookeeper/conf
      volumes:
      - name: confdir
        emptyDir: {}
      - name: workdir
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
---
# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: zookeeper
  labels:
    app: onyx-twitter-sample
    component: zk
spec:
  ports:
  - port: 2888
    name: peer
  - port: 3888
    name: leader-election
  # *.zk.default.svc.cluster.local
  clusterIP: None
  selector:
    component: zk
